server {
    listen 192.168.64.7:80;
    server_name 192.168.64.7;

    server_tokens off;

    location /app/ {
	rewrite ^/app/(.*)$ /$1 break;
        proxy_pass http://10.61.75.117:9000;
	proxy_set_header Host $host;
    }
    
    location /a3n/ {
	rewrite ^/a3n/(.*)$ /$1 break;
        proxy_pass http://10.61.75.117:3001;
	proxy_set_header Host $host;
    }

    location = /auth {
        internal;
        proxy_pass http://10.61.75.117:3001/auth/authenticate;
        proxy_set_header Content-Length "";
        proxy_set_header Authorization $http_authorization;
        proxy_pass_request_body off;
    }

    location /customerapi/ {
        auth_request /auth;
        auth_request_set $auth_status $upstream_status;
        auth_request_set $auth_id $upstream_http_x_auth_id;
        auth_request_set $auth_uuid $upstream_http_x_auth_uuid;
        auth_request_set $auth_roles $upstream_http_x_auth_roles;

        error_page 401 = @auth_failed_401;
        error_page 405 = @auth_failed_405;
        error_page 500 = @auth_failed_500;

        proxy_set_header Authentication "";
        proxy_set_header X-Auth-ID $auth_id;
        proxy_set_header X-Auth-UUID $auth_uuid;
        proxy_set_header X-Auth-Roles $auth_roles;

        proxy_pass http://10.61.75.117:3002;
    }

    location @auth_failed_401 {
        add_header Content-Type text/plain;
        return 401 "Authentication failed";
    }
    location @auth_failed_405 {
        add_header Content-Type text/plain;
        return 401 "Method not allowed";
    }
    location @auth_failed_500 {
        add_header Content-Type text/plain;
        return 401 "Internal Server Error";
    }

    location /productapi/ {
        proxy_pass http://10.61.74.64:3004;
    }
}
